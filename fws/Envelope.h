/*
 * Generated by asn1c-0.9.21 (http://lionet.info/asn1c)
 * From ASN.1 module "EnvelopeModule"
 * 	found in "Envelope.asn1"
 */

#ifndef	_Envelope_H_
#define	_Envelope_H_


#include <asn_application.h>

/* Including external dependencies */
#include <OCTET_STRING.h>
#include <constr_SEQUENCE.h>
#include <VisibleString.h>
#include <ENUMERATED.h>
#include <UTF8String.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum body_or_fault_PR {
	body_or_fault_PR_NOTHING,	/* No components present */
	body_or_fault_PR_body,
	body_or_fault_PR_fault
} body_or_fault_PR;
typedef enum code {
	code_sender	= 0,
	code_receiver	= 1
} e_code;

/* Envelope */
typedef struct Envelope {
	struct header {
		OCTET_STRING_t	*block	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} header;
	struct body_or_fault {
		body_or_fault_PR present;
		union Envelope__body_or_fault_u {
			struct body {
				VisibleString_t	 type;
				OCTET_STRING_t	 data;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} body;
			struct fault {
				ENUMERATED_t	 code;
				UTF8String_t	*reason	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fault;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} body_or_fault;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Envelope_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_code_9;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_Envelope;

#ifdef __cplusplus
}
#endif

#endif	/* _Envelope_H_ */
